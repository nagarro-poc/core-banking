version: "3"
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    networks:
      - core-network
    ports:
      - "5672:5672"
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - core-network
    container_name: zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    restart: always
  kafka:
    image: wurstmeister/kafka
    networks:
      - core-network
    container_name: kafka
    links:
      - zookeeper:zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPIC: "transaction.notification"
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper
  mysql:
    image: mysql:latest
    container_name: mysql
    networks:
      - core-network
    ports:
      - "3306:3306"
    volumes:
      - ../../init:/docker-entrypoint-initdb.d
      - mysqldb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
      - core-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
     - "27017:27017"
    volumes:
    - mongodb_data:/data/db
  redis:
    image: redis
    container_name: redis
    networks:
      - core-network
    ports:
    - "6379:6379"
    volumes:
    - redis_data:/data
  vault:
    image: vault:latest
    container_name: vault
    networks:
      - core-network
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "vOU1OCs0IDS6pjr6xGKgkq9AVWhCrs4fo5dVvuK3UDk"
      VAULT_ADDR: "http://0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    volumes:
      - "vault-logs:/vault/logs"
      - "vault-file:/vault/file"

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
#    container_name: elasticsearch_springboot
#    environment:
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "discovery.type=single-node"
#      - xpack.security.enabled=false
#    ports:
#      - "9200:9200"
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data
#    networks:
#      - core-network
#
#  kibana:
#      image: docker.elastic.co/kibana/kibana:8.3.3
#      container_name: kibana_springboot
#      ports:
#        - "5601:5601"
#      environment:
#        ELASTICSEARCH_URL: http://elasticsearch:9200
#        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
#      depends_on:
#        - elasticsearch
#      networks:
#        - core-network
#
#  logstash:
#      image: docker.elastic.co/logstash/logstash:8.3.3
#      container_name: logstash_springboot
#      volumes:
#        - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
#      ports:
#        - "5044:5044"
#        - "5000:5000/tcp"
#        - "5000:5000/udp"
#        - "9600:9600"
#      environment:
#        LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#      networks:
#        - core-network
#      depends_on:
#        - elasticsearch
networks:
  core-network:
    driver: bridge
volumes:
  mysqldb_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  vault-logs:
    driver: local
  vault-file:
    driver: local
#  elasticsearch_data:
#    driver: local
